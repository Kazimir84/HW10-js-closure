console.log('-----------------------№3');

function sum (x) {    
    return function (y) {
       return x + y;
    };
}

const sum1 = sum(1);
sum1(2); // результат выполнения 3
console.log('sum1', sum1(2));

sum(1)(2); // результат выполнения 3
console.log('sum', sum(1)(2));

console.log('-----------------------№4');

console.log('-----------------------№4 Вариант №1');

for (let i = 0; i < 10; i++) {   
    setTimeout(function() {
        console.log('i1 = ', i+1);
    }, 0); 
}
// Это получилось, как то автоматически и первое что пришло на ум, в памяти как то зависло что цикл for (начало; условие; шаг), и начало объявляется через let а не var.
// setTimeout - выполняется с задержкой (она ставиться в очередь) и есть вложенная функция
// объявление var выделяет одну "ячейку" в памяти и на эту одну и туже "ячейку" всегда ссылается переменная i.
// объявление let при каждой итерации выделяет новую "ячейку", таким образом переменная i на каждом шаге перебора цикла ссылается на новый адрес.

console.log('-----------------------№4 Вариант №2');

for (var i = 0; i < 10; i++) {
    setTimeout(lexion (i), 0);
}
function lexion(i) {
    let i2 = i;
    return function () {
        console.log('i2 = ', i2+1);
    }
}

console.log('-----------------------№4 Вариант №2.1');

for (var i = 0; i < 10; i++) {
    setTimeout(lexion2 (i), 0);
}
function lexion2 (i) {
    console.log ('i3 = ', i+1);    
}
